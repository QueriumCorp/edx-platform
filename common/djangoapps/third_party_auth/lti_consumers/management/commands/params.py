u"""
  Written by:   mcdaniel
                lpm0073@gmail.com
                https://lawrencemcdaniel.com

  Date:         Jan-2020

  LTI Grade Sync.
  Utilities for creating and maintaining LTI Configurations

  Run from the command line like this:
  cd /edx/app/edxapp/edx-platform
          sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings=production params initialize "THE NAME OF YOUR NEW CONFIGURATION"

"""
import json
from django.core.management.base import BaseCommand
from common.djangoapps.third_party_auth.lti_consumers.gradesync import LTIGradeSync
from common.djangoapps.third_party_auth.lti_consumers.constants import (
    LTI_CACHE_TABLES,
    LTI_PARAMS_DEFAULT_CONFIGURATION
    )
from common.djangoapps.third_party_auth.lti_consumers.models import (
    LTIConfigurations,
    LTIConfigurationParams
    )

VALID_COMMANDS = ['initialize']

class Command(BaseCommand):
    help = u"LTI Grade Sync. Utilities for creating and maintaining LTI Configurations."

    def add_arguments(self, parser):
      parser.add_argument(
            'command',
            type=str,
            help='LTI Grade Sync command: initialize'
            )

      parser.add_argument(
            'name',
            type=str,
            help='LTI Grade Sync Configuration name'
            )

    def handle(self, *args, **kwargs):
        cmd = kwargs['command'].lower()
        name = kwargs['name']

        if cmd not in VALID_COMMANDS:
            print('Valid commands include: {commands}'.format(
                commands=json.dumps(VALID_COMMANDS)
            ))
            return

        if cmd == 'initialize':
            self.params_initialize()
            return

    def params_initialize()

        configuration = LTIConfigurations(
            name=name,
            comment='auto-initialized by manage.py'
        )
        configuration.save()

        for table in LTI_CACHE_TABLES:
            params = LTI_CACHE_TABLES[table]
            for param in params:
                configuration_parameter = LTIConfigurationParams(
                    configuration=configuration,
                    table_name=table,
                    internal_field=param,
                    external_field=params[param],
                    comments='auto-generated by manage.py from constants.LTI_PARAMS_DEFAULT_CONFIGURATION'
                )
                configuration_parameter.save()

        return
